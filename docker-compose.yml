version: '3'

volumes:
  pg_data:
  static:
  redis_data:

services:
  redis:
    image: redis:latest
    restart: always
    container_name: redis_container
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  postgres_db:
    container_name: pg_container
    image: postgres:13.10
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend/
    container_name: backend_container
    env_file: .env
    volumes:
      - static:/backend_static
    depends_on:
      - postgres_db
      - redis

  frontend:
    container_name: frontend_container
    build: ./frontend
    command: cp -r /app/dist/. /frontend_static/
    volumes:
      - static:/frontend_static
    depends_on:
      - backend

  gateway:
    build: ./gateway/
    container_name: gateway_container
    env_file: .env
    volumes:
      - static:/staticfiles
    ports:
      - 8000:80
    depends_on:
      - backend
  
  celery_worker:
    build: ./backend/
    container_name: celery_worker_container
    command: celery -A external_currency worker --loglevel=info
    env_file: .env
    depends_on:
      - redis
      - backend
      - postgres_db

  celery_beat:
    build: ./backend/
    container_name: celery_beat_container
    command: celery -A external_currency beat --loglevel=info
    env_file: .env
    volumes: 
      - pg_data:/var/lib/postgresql/data
      - redis_data:/data
    depends_on:
      - redis
      - backend
      - postgres_db